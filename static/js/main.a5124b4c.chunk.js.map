{"version":3,"sources":["components/List.js","components/ListItem.js","components/ListContainer.js","components/Phone.js","components/Passport.js","components/BackgroundItem.js","components/Desktop.js","serviceWorker.js","index.js"],"names":["List","React","forwardRef","_ref","ref","alert","error","_ref$onChange","onChange","f","_ref$onClose","onClose","_ref$onSubmit","onSubmit","_ref$renderTasks","renderTasks","react_default","a","createElement","className","style","display","index_esm","type","placeholder","onClick","ListItem","state","editing","checked","toggleCheck","_this","setState","edit","remove","props","onRemove","item","save","e","preventDefault","_newText","value","cancel","renderForm","id","input","defaultValue","children","renderDisplay","status","textDecoration","this","Component","ListContainer","tasks","userInput","handleUserInput","target","add","prevState","concat","Object","toConsumableArray","nextId","task","inputEl","uniqueId","update","newText","i","map","objectSpread","filter","closeError","components_ListItem","key","data","require","_this2","components_List","Phone","width","justifyContent","Passport","BackgroundItem","components_Phone","components_Passport","Desktop","components_ListContainer","components_BackgroundItem","Boolean","window","location","hostname","match","ReactDOM","render","components_Desktop","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a5124b4c.chunk.js","sourcesContent":["import React from 'react';\nimport '../stylesheets/List.css';\nimport PropTypes from 'prop-types';\nimport { FaExclamationCircle, FaPlus } from 'react-icons/fa';\n\nconst List = React.forwardRef(({alert, error, onChange=f=>f, onClose=f=>f, onSubmit=f=>f, renderTasks=f=>f}, ref) => {\n    return (\n        <div className=\"List\">\n            <div className=\"list-header\">To Do List</div>\n            \n            <div className=\"list-form\">\n                <div className=\"alert-message\" style={{display: alert ? 'inline' : 'none'}}>\n                    <FaExclamationCircle /> Enter a task\n                </div>\n                <form className=\"add-form\" onSubmit={ onSubmit }>\n                    <input\n                        ref={ref}\n                        type=\"text\" \n                        placeholder=\"Add task\"\n                        onChange={ onChange } \n                        style={{display: error ? 'border: 1px solid red' : 'border: 1px solid slategray'}}\n                    />\n                    <button className=\"add\" type=\"submit\"><FaPlus /></button>\n                </form>\n            </div>\n\n            <div className=\"list-items\">\n                { renderTasks() }\n            </div>\n\n            <div className=\"popup-alert\" style={{display: error ? 'inline' : 'none'}}>\n                <FaExclamationCircle />\n                <p>Task was not entered in text field</p>\n                <button className=\"alert-btn\" onClick={ onClose }>OK</button>\n            </div>\n        </div>\n    )\n})\n\nList.propTypes = {\n    alert: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    renderTasks: PropTypes.func\n}\n\nexport default List;","import React, { Component } from 'react';\nimport '../stylesheets/ListItem.css';\nimport { FaRegCircle, FaCheckCircle, FaSave, FaTimes, FaPen, FaTrash } from 'react-icons/fa';\n\nclass ListItem extends Component {\n    state = {\n        editing: false,\n        checked: false\n    }\n\n    toggleCheck = () =>  {\n        this.setState({\n            checked: !this.state.checked\n        })\n    }\n\n    edit = () => {\n        this.setState({\n            editing: true\n        })\n    }\n\n    remove = () => {\n        this.props.onRemove(this.props.item)\n    }\n\n    save = (e) => {\n        e.preventDefault();\n        this.props.onChange(this._newText.value, this.props.item);\n        this.setState({\n            editing: false\n        })\n    }\n\n    cancel = (e) => {\n        e.preventDefault();\n        this.setState({\n            editing: false\n        })\n    }\n\n    renderForm = () => {\n        return (\n            <div id={this.props.item} className=\"ListItem\">\n                <form className=\"edit-form\">\n                    <textarea ref={input => this._newText = input}\n                              defaultValue={ this.props.children }/>\n                    <span>\n                        <button className=\"save\" onClick={ this.save }><FaSave /></button>\n                        <button className=\"cancel\" onClick={ this.cancel }><FaTimes /></button>\n                    </span>\n                </form>\n            </div>\n        )\n    }\n\n    renderDisplay = () => {\n        let status;\n        this.state.checked ? status = <FaCheckCircle /> : status = <FaRegCircle />;\n\n        return (\n            <div id={this.props.item} className=\"ListItem\">\n               <button className=\"status status-btn\" onClick={ this.toggleCheck }>\n                    { status } <span style={{textDecoration: this.state.checked ? \"line-through\" : \"none\"}}><span className=\"status-font\">{ this.props.children }</span></span>\n                </button>\n               <span className=\"button-div\">\n                    <button className=\"edit\" onClick={ this.edit }><FaPen /></button>\n                    <button className=\"remove\" onClick={ this.remove }><FaTrash /></button>\n                </span>\n            </div>\n        )\n    }\n\n    render() {\n        return this.state.editing ? this.renderForm() : this.renderDisplay();\n    }\n}\n\nexport default ListItem;","import React, { Component } from 'react';\nimport List from './List';\nimport ListItem from './ListItem';\n\nclass ListContainer extends Component {\n    state = {\n        tasks: [],\n        userInput: '',\n        alert: false,\n        error: false\n    }\n\n    componentDidMount() {\n        var data = require('../../src/data.json');\n        this.setState({ tasks: data })\n    }\n\n    handleUserInput = e => {\n        this.setState({\n            alert: false,\n            userInput: e.target.value\n        })\n    }\n    \n    add = (e) => {\n        e.preventDefault();\n        if (this.state.userInput) {\n            this.setState(prevState => ({\n                tasks: [\n                    ...prevState.tasks,\n                    {\n                        id: this.nextId(),\n                        task: this.state.userInput\n                    }\n                ],\n                userInput: '',\n                alert: false,\n                error: false\n            }))\n            this.inputEl.value=\"\"\n        } else {\n            this.setState({\n                alert: true,\n                error: true\n            })\n        }\n    }\n\n    nextId = () => {\n        this.uniqueId = this.uniqueId || 4\n        return this.uniqueId++\n    }\n\n    update = (newText, i) => {\n        this.setState(prevState => ({\n            tasks: prevState.tasks.map(\n                task => (task.id !== i) ? task : {...task, task: newText}\n            )\n        }))\n    }\n\n    remove = (id) => {\n        this.setState(prevState => ({\n            tasks: prevState.tasks.filter(task => task.id !== id)\n        }))\n    }\n\n    closeError = () => {\n        this.setState({ error: false })\n    }\n\n    renderTasks = () => {\n        return this.state.tasks.map(task =>\n            <ListItem key={ task.id } item={ task.id } onChange={ this.update } onRemove={ this.remove }>\n                { task.task }\n            </ListItem>\n        )\n    }\n\n    render() {\n        return (\n            <List\n                ref={input => this.inputEl = input}\n                alert={this.state.alert}\n                error={this.state.error}\n                onChange={this.handleUserInput}\n                onSubmit={this.add}\n                onClose={this.closeError}\n                renderTasks={this.renderTasks}\n            />\n        )\n    }\n}\n\nexport default ListContainer;","import React from 'react';\nimport '../stylesheets/BackgroundItem.css'\n\nconst Phone = () => {\n    return (\n        <div className=\"phone\">\n            <div style={{width: '94%', display: 'flex', justifyContent: 'space-between'}}>\n                <div className=\"phone-camera1\"></div>\n                <div className=\"phone-camera2\"></div>\n            </div>\n            \n            <div className=\"phone-screen\"></div>\n        </div>\n    );\n}\n \nexport default Phone;\n","import React from 'react';\nimport '../stylesheets/BackgroundItem.css'\nimport { FaGlobeAmericas } from 'react-icons/fa';\n\nconst Passport = () => {\n    return (\n        <div className=\"passport\">\n            <div className=\"passport-book\">\n                <div>PASSPORT</div>\n                <div className=\"passport-globe\"><FaGlobeAmericas /></div>\n            </div>\n\n            <div className=\"passport-ticket\">\n                <div className=\"passport-stripe\"></div>\n            </div>\n        </div>\n    );\n}\n \nexport default Passport;\n","import React from 'react';\nimport '../stylesheets/BackgroundItem.css'\nimport Phone from './Phone';\nimport Passport from './Passport';\n\nconst BackgroundItem = () => (\n  <div className=\"background-items\">\n    <Phone />\n    <Passport />\n  </div>\n)\n\nexport default BackgroundItem;","import React from 'react';\nimport '../stylesheets/Desktop.css';\nimport ListContainer from './ListContainer';\nimport BackgroundItem from './BackgroundItem';\n\nconst Desktop = () => (\n  <div className=\"Desktop\">\n    <ListContainer />\n    <BackgroundItem />\n  </div>\n);\n\nexport default Desktop;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport Desktop from './components/Desktop';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Desktop />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}