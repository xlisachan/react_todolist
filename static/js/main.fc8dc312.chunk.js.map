{"version":3,"sources":["components/PopupModal.js","components/Form.js","components/List.js","components/ListItem.js","components/ListContainer.js","components/Background.js","App.js","serviceWorker.js","index.js"],"names":["PopupModal","error","onClose","f","className","style","display","fontSize","color","onClick","Form","React","forwardRef","alert","onChange","onSubmit","ref","type","placeholder","List","renderTasks","ListItem","Component","state","editing","checked","toggleCheck","this","setState","edit","remove","props","onRemove","item","save","e","preventDefault","_newText","value","cancel","renderForm","id","input","defaultValue","children","renderDisplay","status","textDecoration","render","ListContainer","tasks","userInput","handleUserInput","target","add","prevState","uuid","v4","task","inputEl","update","newText","i","map","filter","closeError","key","componentDidMount","axios","get","then","res","titles","data","el","title","catch","err","console","Passport","Phone","width","justifyContent","Background","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc8dc312.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaExclamationCircle } from 'react-icons/fa';\n\nconst PopupModal = ({error, onClose=f=>f}) => {\n    return (\n        <div className=\"popup-alert\" style={{display: error ? 'inline' : 'none', fontSize: \"1rem\"}}>\n            <div>\n                <FaExclamationCircle style ={{color: 'red', fontSize: \"x-large\"}} />\n                <p>Task was not entered in text field</p>\n            </div>\n                \n            <button className=\"alert-btn\" onClick={ onClose }>OK</button>\n        </div>\n    );\n}\n\nPopupModal.propTypes = {\n    error: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n}\n \nexport default PopupModal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaExclamationCircle, FaPlus } from 'react-icons/fa';\n\nconst Form = React.forwardRef(({alert, error, onChange=f=>f, onSubmit=f=>f}, ref) => {\n    return (\n        <div className=\"list-form\">\n            <div className=\"alert-message\" style={{display: alert ? 'inline' : 'none'}}>\n                <FaExclamationCircle /> Enter a task\n            </div>\n\n            <form className=\"add-form\" onSubmit={ onSubmit }>\n                <input\n                    ref={ref}\n                    type=\"text\" \n                    placeholder=\"Add task\"\n                    onChange={ onChange } \n                    style={{display: error ? 'border: 1px solid red' : 'border: 1px solid slategray'}}\n                />\n                \n                <button className=\"add\" type=\"submit\"><FaPlus /></button>\n            </form>\n        </div>\n    );\n});\n\nForm.propTypes = {\n    alert: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n \nexport default Form;","import React from 'react';\nimport '../stylesheets/List.css';\nimport PropTypes from 'prop-types';\nimport PopupModal from './PopupModal';\nimport Form from './Form';\n\nconst List = React.forwardRef(({alert, error, onChange=f=>f, onClose=f=>f, onSubmit=f=>f, renderTasks=f=>f}, ref) => {\n    return (\n        <div className=\"List\">\n            <div className=\"list-header\">To Do List</div>\n            \n            <Form\n                ref={ref}\n                alert={alert}\n                error={error}\n                onChange={onChange}\n                onSubmit={onSubmit}\n            />\n\n            <div className=\"list-items\">\n                { renderTasks() }\n            </div>\n\n            <PopupModal error={error} onClose={onClose} />\n        </div>\n    )\n});\n\nList.propTypes = {\n    alert: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    renderTasks: PropTypes.func\n};\n\nexport default List;","import React, { Component } from 'react';\nimport '../stylesheets/ListItem.css';\nimport { FaRegCircle, FaCheckCircle, FaSave, FaTimes, FaPen, FaTrash } from 'react-icons/fa';\n\nclass ListItem extends Component {\n    state = {\n        editing: false,\n        checked: false\n    }\n\n    toggleCheck = () =>  {\n        this.setState({\n            checked: !this.state.checked\n        })\n    }\n\n    edit = () => {\n        this.setState({\n            editing: true\n        })\n    }\n\n    remove = () => {\n        this.props.onRemove(this.props.item)\n    }\n\n    save = (e) => {\n        e.preventDefault();\n        this.props.onChange(this._newText.value, this.props.item);\n        this.setState({\n            editing: false\n        })\n    }\n\n    cancel = (e) => {\n        e.preventDefault();\n        this.setState({\n            editing: false\n        })\n    }\n\n    renderForm = () => {\n        return (\n            <div id={this.props.item} className=\"ListItem\">\n                <form className=\"edit-form\">\n                    <textarea ref={input => this._newText = input}\n                              defaultValue={ this.props.children }/>\n                    <span>\n                        <button className=\"save\" onClick={ this.save }><FaSave /></button>\n                        <button className=\"cancel\" onClick={ this.cancel }><FaTimes /></button>\n                    </span>\n                </form>\n            </div>\n        )\n    }\n\n    renderDisplay = () => {\n        let status;\n        this.state.checked ? status = <FaCheckCircle /> : status = <FaRegCircle />;\n\n        return (\n            <div id={this.props.item} className=\"ListItem\">\n               <button className=\"status status-btn\" onClick={ this.toggleCheck }>\n                    { status } <span style={{textDecoration: this.state.checked ? \"line-through\" : \"none\"}}><span className=\"status-font\">{ this.props.children }</span></span>\n                </button>\n               <span className=\"button-div\">\n                    <button className=\"edit\" onClick={ this.edit }><FaPen /></button>\n                    <button className=\"remove\" onClick={ this.remove }><FaTrash /></button>\n                </span>\n            </div>\n        )\n    }\n\n    render() {\n        return this.state.editing ? this.renderForm() : this.renderDisplay();\n    }\n}\n\nexport default ListItem;","import React, { Component } from 'react';\nimport List from './List';\nimport ListItem from './ListItem';\nimport axios from 'axios';\nimport uuid from 'uuid';\n\nclass ListContainer extends Component {\n    state = {\n        tasks: [],\n        userInput: '',\n        alert: false,\n        error: false\n    };\n\n    componentDidMount() {\n        axios\n            .get('https://jsonplaceholder.typicode.com/todos?_limit=5')\n            .then(res => {\n                let titles = res.data.map(el => ({\n                        id: el.id,\n                        task: el.title\n                }));\n                this.setState({tasks: titles});\n            })\n            .catch(err => console.error(err));\n    };\n\n    handleUserInput = e => {\n        this.setState({\n            alert: false,\n            userInput: e.target.value\n        });\n    };\n    \n    add = e => {\n        e.preventDefault();\n        if (this.state.userInput) {\n            this.setState(prevState => ({\n                tasks: [\n                    ...prevState.tasks,\n                    {\n                        id: uuid.v4(),\n                        task: this.state.userInput\n                    }\n                ],\n                userInput: '',\n                alert: false,\n                error: false\n            }));\n            this.inputEl.value = \"\";\n        } else {\n            this.setState({\n                alert: true,\n                error: true\n            })\n        }\n    };\n\n    update = (newText, i) => {\n        this.setState(prevState => ({\n            tasks: prevState.tasks.map(\n                task => (task.id !== i) ? task : {...task, task: newText}\n            )\n        }));\n    };\n\n    remove = id => {\n        this.setState(prevState => ({\n            tasks: prevState.tasks.filter(task => task.id !== id)\n        }))\n    };\n\n    closeError = () => {\n        this.setState({ error: false });\n    };\n\n    renderTasks = () => {\n        return this.state.tasks.map(task =>\n            <ListItem key={ task.id } item={ task.id } onChange={ this.update } onRemove={ this.remove }>\n                { task.task }\n            </ListItem>\n        )\n    };\n\n    render() {\n        return (\n            <List\n                ref={input => this.inputEl = input}\n                alert={this.state.alert}\n                error={this.state.error}\n                onChange={this.handleUserInput}\n                onSubmit={this.add}\n                onClose={this.closeError}\n                renderTasks={this.renderTasks}\n            />\n        )\n    };\n};\n\nexport default ListContainer;","import React from 'react';\nimport '../stylesheets/BackgroundItem.css'\nimport { FaGlobeAmericas } from 'react-icons/fa';\n\nconst Passport = () => (\n  <div className=\"passport\">\n    <div className=\"passport-book\">\n      <div>PASSPORT</div>\n      <div className=\"passport-globe\"><FaGlobeAmericas /></div>\n    </div>\n\n    <div className=\"passport-ticket\">\n      <div className=\"passport-stripe\"></div>\n    </div>\n  </div>\n);\n\nconst Phone = () => (\n  <div className=\"phone\">\n    <div style={{width: '94%', display: 'flex', justifyContent: 'space-between'}}>\n      <div className=\"phone-camera1\"></div>\n      <div className=\"phone-camera2\"></div>\n    </div>\n    \n    <div className=\"phone-screen\"></div>\n  </div>\n);\n\nconst Background = () => (\n  <div className=\"background-items\">\n    <Phone />\n    <Passport />\n  </div>\n);\n\nexport default Background;","import React from 'react';\nimport './stylesheets/App.css';\nimport ListContainer from './components/ListContainer';\nimport Background from './components/Background';\n\nconst App = () => (\n  <div className=\"Desktop\">\n    <ListContainer />\n    <Background />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}